version: '3'

services:
  app:
    build:
      context: .
      dockerfile: ./packages/backend/Dockerfile
      args:
        - NODE_ENV=production
    container_name: master-project-app
    restart: on-failure:3
    environment:
      USE_HTTPS: ${USE_HTTPS}
      NO_CONSOLE_LOGGING: ${NO_CONSOLE_LOGGING}
      NO_FILE_LOGGING: ${NO_FILE_LOGGING}
      BACKEND_PORT: ${BACKEND_PORT}
      WORKER_ACTIVE: ${WORKER_ACTIVE}
      WORKER_DELAY: ${WORKER_DELAY}
      WORKER_RUN_FILE_PATH: ${WORKER_RUN_FILE_PATH}
      CONFIG_PATH: ${CONFIG_PATH}
      SIMULATION_PORT: ${SIMULATION_PORT}
      URL_METHANATION_001: sim_001
      MODERATOR_USERNAME: ${MODERATOR_USERNAME}
      MODERATOR_PASSWORD: ${MODERATOR_PASSWORD}
      STUDENT_USERNAME: ${STUDENT_USERNAME}
      STUDENT_PASSWORD: ${STUDENT_PASSWORD}
    networks:
      - backend
    ports:
      - 8080:${BACKEND_PORT}
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://app:${BACKEND_PORT}/readiness']
      interval: 30s
      timeout: 10s
      start_period: 10s
      start_interval: 5s
      retries: 5
    command: node ./src/index.js
    depends_on:
      - sim_001

  sim_001:
    build:
      context: .
      dockerfile: ./packages/simulation/Dockerfile
      args:
        - ENV=production
    container_name: master-project-sim_001
    restart: on-failure:3
    environment:
      SIMULATION_PORT: ${SIMULATION_PORT}
    networks:
      - backend
    ports:
      - 3001:${SIMULATION_PORT}
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://sim_001:${SIMULATION_PORT}/health']
      interval: 30s
      timeout: 10s
      start_period: 10s
      start_interval: 5s
      retries: 5
    command: python3 /app/simulations/methanation/Methanation_local_smart/start.py

networks:
  backend:
